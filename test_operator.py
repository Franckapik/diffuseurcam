import bpy

# Test si l'op√©rateur contre-pilier existe
def test_contre_pilier_operator():
    print("üîß [TEST] V√©rification de l'op√©rateur contre-pilier...")
    
    # V√©rifier si l'op√©rateur existe dans Blender
    try:
        op = bpy.ops.mesh.contre_pilier_moule
        print("‚úÖ [TEST] Op√©rateur mesh.contre_pilier_moule trouv√©!")
        print(f"‚úÖ [TEST] Description: {op.__doc__}")
        return True
    except AttributeError:
        print("‚ùå [TEST] Op√©rateur mesh.contre_pilier_moule INTROUVABLE!")
        return False

# Lister tous les op√©rateurs mesh disponibles
def list_mesh_operators():
    print("üîß [TEST] Op√©rateurs mesh disponibles contenant 'pilier':")
    for attr_name in dir(bpy.ops.mesh):
        if 'pilier' in attr_name.lower():
            print(f"  - mesh.{attr_name}")

# Tester les propri√©t√©s
def test_properties():
    print("üîß [TEST] V√©rification des propri√©t√©s...")
    scene = bpy.context.scene
    
    if hasattr(scene, 'pos_props'):
        pos_props = scene.pos_props
        if hasattr(pos_props, 'contre_pilier_moule_position'):
            print("‚úÖ [TEST] Propri√©t√© contre_pilier_moule_position trouv√©e!")
            print(f"‚úÖ [TEST] Valeur: {pos_props.contre_pilier_moule_position}")
        else:
            print("‚ùå [TEST] Propri√©t√© contre_pilier_moule_position MANQUANTE!")
    else:
        print("‚ùå [TEST] scene.pos_props MANQUANT!")

if __name__ == "__main__":
    test_contre_pilier_operator()
    list_mesh_operators()
    test_properties()
